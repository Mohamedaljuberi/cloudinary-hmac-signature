{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 from flask import Flask, request, jsonify\
import hmac\
import hashlib\
import os\
\
app = Flask(__name__)\
\
@app.route('/sign', methods=['POST'])\
def sign():\
    data = request.get_json()\
    public_id = data.get("public_id")\
    timestamp = data.get("timestamp")\
    secret = os.getenv("CLOUDINARY_SECRET")  # \uc0\u55357 \u56592  pulled from Render env var\
\
    if not public_id or not timestamp or not secret:\
        return jsonify(\{"error": "Missing public_id, timestamp, or secret"\}), 400\
\
    string_to_sign = f"invalidate=true&overwrite=true&public_id=\{public_id\}&timestamp=\{timestamp\}"\
    signature = hmac.new(\
        key=secret.encode('utf-8'),\
        msg=string_to_sign.encode('utf-8'),\
        digestmod=hashlib.sha1\
    ).hexdigest()\
\
    return jsonify(\{"signature": signature\})\
\
\
# \uc0\u55358 \u56800  Use Render-assigned port (not hardcoded)\
if __name__ == "__main__":\
    port = int(os.environ.get("PORT", 10000))\
    app.run(host="0.0.0.0", port=port)}